# Partially based on https://github.com/surrealdb/surrealdb/blob/main/.github/workflows/ci.yml

name: "Continuous Integration"
run-name: "CI run '${{ github.head_ref || github.ref_name }}'"

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  commits:
    name: Check commits standard
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' && github.event_name == 'pull_request' }}
    env:
      TITLE: ${{ github.event.pull_request.title }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install bun
        uses: oven-sh/setup-bun@v1

      - name: Install commit lint
        run: bun install commitlint@latest | bun install @commitlint/config-conventional@latest

      - name: Validate PR title with commitlint
        run: printf "%s" "${TITLE}" | bunx commitlint

      - name: Validate PR commits with commitlint
        run: bunx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose

  schemas:
    name: Check migrations and schemas
    runs-on: ubuntu-latest
    needs: commits
    if: ${{ always() && !failure() && !cancelled() }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install SurrealCLI
        run: curl -sSf https://install.surrealdb.com | sh

      - name: Validate schemas and migrations
        run: surreal validate

  format:
    name: Check code formatting
    runs-on: ubuntu-latest
    needs: commits
    if: ${{ always() && !failure() && !cancelled() }}
    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install required packages
        run: cargo install --debug --locked cargo-make

      - name: Run ci:format
        run: cargo make ci-format

  clippy:
    name: Check code lints
    runs-on: ubuntu-latest
    needs: commits
    if: ${{ always() && !failure() && !cancelled() }}
    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install required packages
        run: cargo install --debug --locked cargo-make

      - name: Run ci:clippy
        run: cargo make ci-clippy

  audit:
    name: Check dependencies issues
    runs-on: ubuntu-latest
    needs: commits
    if: ${{ always() && !failure() && !cancelled() }}
    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install required packages
        run: cargo install --debug --locked cargo-make cargo-audit

      - name: Run ci:audit
        run: cargo make ci-audit

  workspace:
    name: Check workspace
    runs-on: ubuntu-latest
    needs: commits
    if: ${{ always() && !failure() && !cancelled() }}
    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Install required packages
        run: cargo install --debug --locked cargo-make

      - name: Run ci:check
        run: cargo make ci-check
