{"schemas":"DEFINE TABLE component SCHEMAFULL;\n\nDEFINE FIELD type ON component TYPE string;\nDEFINE FIELD config ON component FLEXIBLE TYPE object;\nDEFINE TABLE controls SCHEMAFULL;\n\nDEFINE FIELD in ON TABLE controls TYPE record<component>;\nDEFINE FIELD out ON TABLE controls TYPE record<device>;\n\nDEFINE INDEX unique_controls ON TABLE controls COLUMNS in, out UNIQUE;\nDEFINE TABLE device SCHEMAFULL;\n\nDEFINE FIELD name ON device TYPE string;\nDEFINE FIELD serial ON device TYPE string;\nDEFINE FIELD model ON device TYPE string;\nDEFINE FIELD manufacturer ON device TYPE string;\nDEFINE FIELD sw_version ON device TYPE option<string>;\nDEFINE FIELD hw_version ON device TYPE option<string>;\nDEFINE TABLE entity SCHEMAFULL\n  PERMISSIONS\n    FOR select, create, update, delete FULL;\n\nDEFINE FIELD enabled ON entity TYPE bool DEFAULT true ASSERT $value != NONE;\nDEFINE FIELD available ON entity TYPE bool DEFAULT true ASSERT $value != NONE;\nDEFINE FIELD class ON entity TYPE string ASSERT $value != NONE;\nDEFINE FIELD attributes ON entity FLEXIBLE TYPE object DEFAULT {};\nDEFINE FIELD state ON entity FLEXIBLE TYPE object DEFAULT {};\n\nDEFINE EVENT status_attributes_changed ON TABLE entity WHEN $after != NONE AND $before.attributes != $after.attributes THEN {\n    UPDATE $after.id SET status.updated_at = time::now();\n\n    CREATE event CONTENT {\n        name: \"status_attributes_changed\",\n        data: {\n            from: $before.attributes,\n            to: $after.attributes\n        },\n        source: $after.id\n    };\n};\n\nDEFINE EVENT status_state_changed ON TABLE entity WHEN $after != NONE AND $before.state != $after.state THEN (\n    CREATE event CONTENT {\n        name: \"status_changed\",\n        data: {\n             from: $before.state,\n             to: $after.state\n        },\n        source: $after.id\n    }\n);\nDEFINE TABLE event SCHEMAFULL;\n\nDEFINE FIELD name ON event TYPE string VALUE string::lowercase($value);\nDEFINE FIELD data ON event FLEXIBLE TYPE object;\nDEFINE FIELD source ON event TYPE record;\nDEFINE FIELD occurred_at ON event TYPE datetime DEFAULT time::now();\nDEFINE TABLE script_migration SCHEMAFULL\n    PERMISSIONS\n        FOR select FULL\n        FOR create, update, delete NONE;\n\nDEFINE FIELD script_name ON script_migration TYPE string;\nDEFINE FIELD executed_at ON script_migration TYPE datetime DEFAULT time::now();\nDEFINE TABLE updates SCHEMAFULL;\n\nDEFINE FIELD in ON TABLE updates TYPE record<device>;\nDEFINE FIELD out ON TABLE updates TYPE record<entity>;\n\nDEFINE INDEX unique_updates ON TABLE updates COLUMNS in, out UNIQUE;","events":""}